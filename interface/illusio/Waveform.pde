


class Waveform extends Stage
{
  ///////////////////////////////////////////////////
  //ATENÇÃO//////////////////////////////////////////
  //variável gamb!///////////////////////////////////
  //deverá ser substituida pelas ondas dos samples!//
  ///////////////////////////////////////////////////
  float[] samples = { 1.0204622E-4, -2.753821E-5, 1.0902022E-4, -0.005562296, -0.011119838, 0.024411902, -0.0121705, 0.0017672682, 2.0790745E-4, 8.690628E-4, -0.0076490617, 
  0.01601895, -0.0064916154, 3.8011052E-4, 1.2803465E-4, -9.773677E-4, 0.0014507016, 0.0016374446, -0.004461962, 0.0031046006, 0.0013877592, -0.0032392552, 0.0024470228, 
  -0.004625819, 0.0028113974, -0.003942491, 0.00610865, -0.0037084157, 9.72003E-4, 8.652477E-4, -1.11523776E-4, 2.2113988E-4, -1.7882212E-6, -2.0892061E-4, 0.006264937, 
  -0.015042286, 0.0010519284, 0.006247755, -0.03389445, -0.008582855, -0.015089375, 0.031946275, 5.579543E-4, -0.018267106, -0.013242882, 0.035276774, -0.04001138, 
  0.041582435, -0.04221504, 0.04079531, -0.014041686, -0.028883846, 0.023217661, 0.010366937, -0.025450468, -0.008364454, 0.0018649744, 0.0059098555, 0.012027169, 0.0054360474,
  -3.4047218E-4, -1.5575162E-4, -1.1319262E-4, 1.1980901E-4, 3.7248066E-4, -5.269209E-5, -3.397543E-6, -2.0683436E-4, -7.862093E-5, 1.8299169E-4, 2.054634E-4, 1.9372112E-5,
  -5.0844286E-5, 1.5134075E-4, 0.011564604, -0.056861054, 0.036699172, 0.0031114384, -0.02890257, 0.009175111, -8.039215E-4, 0.0014343128, 3.1996783E-4, 0.0016786372,
  0.005619342, -0.0011666773, 6.056016E-5, 3.6598358E-5, 0.008975539, -0.010771709, 0.0027081028, -0.004501838, -0.03277387, -0.006150006, 0.01094324, 0.014927075, 0.021057326, 
  0.006898144, -0.0022256465, -4.382265E-4, 0.0059543275, 0.022845438, -0.002461392, 0.0018060164, -0.009775338, -0.0077302293, -1.4352892E-4, 0.0023326383, -2.5714227E-4, 
  -2.7079222E-4, 7.755409E-4, -6.249147E-4, 0.006515462, -0.0047372836, 0.006893847, -0.0011222715, 0.002813959, -0.0046469197, -0.011754523, 0.0071714954, 0.0028412007,
  0.01786594, 0.016116146, 0.03539372, -0.028605161, 9.061025E-6, 0.015656073, 0.0075615034, 7.181383E-4, -1.688055E-4, 2.4808204E-4, 4.4734654E-4, -0.0024734316, -0.0017044864,
  0.032717444, -0.0973801, 0.09150154, -0.07186089, 0.030350868, 0.02091081, -0.054284878, 0.021728532, 0.028895676, -0.0562268, -0.037038427, -0.040397074, -0.02686082, 
  0.008181765, 0.0022653437, -1.8090566E-4, -1.02105885E-4, 2.4021396E-5, -4.88773E-5, 9.65625E-5, 4.7619583E-4, -0.017409015, -0.0014172033, 0.002071322, -1.3387649E-4,
  3.3796863E-5, 2.368761E-4, -7.8203695E-5, -7.152772E-5, 3.8923026E-5, -4.0949642E-5, 7.635589E-5, -1.1575575E-4, -4.631417E-5, -1.390022E-4, -1.8865446E-4, -8.13628E-5, 
  -7.450808E-5, -2.0874177E-4, 3.171062E-5, 5.865273E-5, 9.089985E-5, -3.808854E-5, 0.03171692, -0.05299717, -0.062444102, 0.028312214, -0.021976775, 0.0074499007, 
  -2.7222876E-4, -0.0035481346, 0.001578081, 0.0075547616, -0.0027795671, -0.010985116, 0.016284775, -0.0018445819, -0.012873037, 0.014290648, -0.015669476, -0.0012658072,
  0.006910419, 0.004527587, -0.0072133383, -0.007883256, 0.0018964456, 0.0022304056, 0.0018862481, 0.011314075, -0.0015675307, 0.0020911142, -7.169461E-4, -1.9831146E-4,
  -0.0035843109, -0.002113586, 0.0015144228, 0.0075691245, -0.002113822, 5.4146565E-4, 2.1774218E-4, -5.465912E-5, -1.2636574E-5, -7.5104363E-6, -4.708885E-6, -0.0015545962, 
  -0.024016645, 0.036045462, -0.018306041, -0.017037783, 0.051660396, -0.082410045, 2.969288E-4, 0.015597313, 0.012492294, -0.007724948, 0.022899427, -0.016003553,
  -0.0062495586, 0.0065248203, 3.8362714E-4, -4.232056E-5, 2.4736706E-5, -1.407309E-4, -0.007881939, -0.0018955442, 0.02050772, -0.014563818, 0.04118563, -0.07960815,
  0.07385406, 0.00926568, -0.047495075, 0.040924955, -4.2701905E-4, -2.1255665E-4, 1.96463E-4, 3.1948988E-5, -1.07649255E-4, 1.0603992E-4, -1.1152368E-4, -1.0609932E-5, 
  -8.5773674E-5, 2.4081011E-5, -7.140855E-5, 3.8565347E-5, -8.839645E-5, 4.5896995E-5, 1.2958438E-4, -1.4555908E-4, -0.005286675, 0.028983887, -0.02668092, 0.03650528, 
  0.0014275751, -2.3961789E-4, 7.444254E-4, 0.01013399, -0.0072657787, 3.9566998E-4, 0.0077370983, -0.012028395, -0.0065939073, -3.2264806E-4, 0.0039591207, 0.023731597, 
  -0.02281919, 0.0014046228, 0.012511035, -0.0056536733, -0.0024525682, -5.6483113E-4, -4.1903378E-4, -2.5749978E-5, -4.5718167E-5, 0.00292781, 0.018156433, -0.0037974126, 
  0.02370895, -0.074878596, -0.07120569, -0.014963961, -0.0047304933, -4.6630081E-4, -2.849191E-4, -4.2916618E-5, -1.9765507E-4, -2.2966377E-4, 2.7484534E-4 };

  boolean editing = false;
  Button    owner = null;
  
  public Waveform(Button b, Stage u)
  {
    owner = b;
    super.depth = b.level+1;
    super.up    = u;
    
  }
  
  void draw()
  {
    if (owner.mockup)//se for mockup, desenhe a superclasse!
    {
      super.draw();
      return;
    }
    
    strokeWeight(20);
    
    if (edit_mode)
      background(255);
    else
      background(0);
      
    
    int lmt = owner.time; 
    if (owner.last-owner.start <= lmt)
      owner.last = millis();
    else
      owner.start = millis();
    float ny = map ((float)(owner.last-owner.start), 0, lmt, 0, width);
    stroke(120);
    line(ny, 0, ny, height);
        
               
    if (edit_mode)
      stroke(0);
    else
      stroke(255);
    
    noFill();
    beginShape();
    for (int i = 0; i < samples.length; i++)
    { 
      float x = map(i, 0, samples.length, 0, width);
      float y = map(samples[i], -1, 1, 0, height);
      vertex(x, y);
    }
    endShape();
  }
  
  
  boolean is_editing()
  {
    return editing;
  }
  
  void stop_editing ()
  {
    editing = false;
  }
  
  void check_editing (int x, int y)
  {
     int   mx = constrain(round(map(x, 0, width, 0, samples.length-1)), 1,samples.length-2);
     float my = constrain(map(y, 0, height, -1, 1), -1, 1);
     if (((samples[mx-1] < my + 0.1) && (samples[mx-1] > my - 0.1)) ||
         ((samples[mx  ] < my + 0.1) && (samples[mx  ] > my - 0.1)) ||
         ((samples[mx+1] < my + 0.1) && (samples[mx+1] > my - 0.1)))
       editing = true;
     else
       editing = false; 
  }
  
  void update (int x, int y)
  {
    if (editing)
    {
      int   mx = constrain(round(map(x, 0, width, 0, samples.length-1)), 0,samples.length-1);
      float my = constrain(map(y, 0, height, -1, 1), -1, 1);
      samples[mx] = my;
    }
  }
  
  boolean block_touch_events()
  {
    return !owner.mockup;
  }
}
